/*
-*- coding: utf-8 -*-
* vim: set ts=4 sw=4 et sts=4 ai:
* Copyright 2013 MITHIS
* All rights reserved.
*/

/*global module, ko, $*/

module.exports = (function() {
    'use strict';
    var client = {};
    function ChatViewModel() {
        var self = this,
            socket = io(),
            $linesDom = $('#lines');

        //array of: {id:<num>, sender:<string>, message:<string>}
        this.lines = ko.observableArray([{
            id: 0,
            sender: 'Chat',
            message: 'Welcome to the chat.'
        }]);
        this.input = ko.observable('');
        this.enabled = ko.observable(false);
        this.init = function() {
            socket.on('chat message', function(msg){
                self.lines.push(msg);
                //scroll to bottom
                $linesDom.scrollTop($linesDom.get(0).scrollHeight);
            });
        };
        this.send = function() {
            socket.emit('chat message', this.input());
            this.input('');
        };
        this.enable = function() {
            this.enabled(true);
        };
        this.disable = function() {
            this.enabled(false);
        };

    }

    client.start = function() {
        var $clientDom = $('#chat-client'),
            vm = new ChatViewModel();
        if ($clientDom[0] !== undefined) {
            ko.applyBindings(vm, $clientDom.get(0));
            $clientDom.find('input').focus();
        } else {
            console.warn('#chat-client div not found');
        }
        vm.init();
    };
    return client;
}());



