<project name="SpaceRunner" default="run">
    <property name="node-version" value="0.10.33"/>
    <property name="node-dir" value="node-v${node-version}-linux-x86"/>
    <property name="redis-version" value="2.6.10"/>
    <property name="redis-dir" value="redis-${redis-version}"/>

    <target name="run" depends="tools/node,tools/redis" description="Starts the app with the NodeJS server">
        <property name="app-url" value="http://localhost:3000"/>
        <echo message="Installing node modules ..."/>
        <exec executable="../tools/npm" dir="src">
            <arg line="install"/>
        </exec>
        <parallel>
            <sequential>
                <echo message="Starting redis server ..."/>
                <exec executable="tools/redis" >
	      	    </exec>
            </sequential>
            <sequential>
                <sleep seconds="3"/>
                <echo message="Starting NodeJS ..."/>
                <exec executable="../tools/${node-dir}/bin/node" dir="src">
	        		<arg line="app.js"/>
	      	    </exec>
            </sequential>
            <sequential>
                <echo message="Waiting 6 seconds ..."/>
                <sleep seconds="6"/>
                <echo message="Launching app at ${app-url}"/>
                <exec executable="xdg-open" >
	    		    <arg line="${app-url}"/>
	  	        </exec>
            </sequential>
        </parallel>
    </target>
    <target name="clean" description="Erases everything on the tools folder">
        <delete includeEmptyDirs="true">
  		<fileset dir="tools" includes="*"/>
	</delete>
    </target>
    <!-- Test reports -->
    <target name="report">
        <echo message="'report' task is disabled for now." />
    </target>
	<!-- Lint -->
	
	<target name="lint" depends="tools/closure_linter,tools/jslint" description="Runs a lint check in the code">
	    <echo message="**************************************"/>
	    <echo message="*** 1; Checking lint with 'JSLint' ***"/>
	    <echo message="**************************************"/>
	    <exec executable="tools/phantomjs" >
	    		<arg line="run-jslint.js"/>
	  	</exec>
	  	<echo message="**********************************************"/>
	  	<echo message="*** 2; Checking lint with 'Closure Linter' ***"/>
	  	<echo message="**********************************************"/>
	  	<exec executable="tools/closure_linter/gjslint.py">
	  	    <arg line="--nojsdoc -r src -e src/public/_common/vendor,src/node_modules"/>
	  	</exec>
        <exec executable="tools/closure_linter/gjslint.py">
            <arg line="--nojsdoc -r src/node_modules/shared"/>
        </exec>
        <exec executable="tools/closure_linter/gjslint.py">
            <arg line="--nojsdoc -r src/node_modules/client"/>
        </exec>
	</target>
	<target name="beautify" depends="tools/jsbeautifier">
	    <exec executable="tools/phantomjs" >
	    		<arg line="run-jsbeautifier.js"/>
	  	</exec>
	</target>
	<target name="fixlint" depends="tools/closure_linter">
	    <exec executable="tools/closure_linter/fixjsstyle.py">
	  	    <arg line="-r src -e src/public/_common/vendor,src/node_modules"/>
	  	</exec>
	</target>

	<!-- Tools -->

	<target name="check-phantomjs">
        <condition property="phantomjs-not-installed">
            <not>
              <available file="tools/phantomjs"/>
            </not>
          </condition>
    </target>
	<target name="tools/phantomjs" description="Downloads and extract phantomjs" depends="check-phantomjs" if="phantomjs-not-installed">
        <property name="version" value="phantomjs-1.8.1-linux-x86_64"/>
        <property name="tarball" value="${version}.tar.bz2"/>
        <delete file="tools/phantomjs"/>
		<delete file="tools/${tarball}"/>
		<delete dir="tools/${version}"/>
        <echo message="Downloading phantomjs..."/>
        <exec executable="wget" dir="tools">
	        <arg line="-c http://phantomjs.googlecode.com/files/${tarball}"/>
        </exec>
        <echo message="Extract phantomjs..."/>
        <exec executable="tar" dir="tools">
		    <arg line="-jxvf ${tarball}"/>
        </exec>
        <symlink link="tools/phantomjs" resource="${version}/bin/phantomjs"/>
    </target>

    <target name="check-closure_linter">
        <condition property="closure_linter-not-installed">
            <not>
              <available file="tools/closure_linter/gjslint.py"/>
            </not>
          </condition>
    </target>

    <target name="tools/closure_linter" depends="tools/phantomjs,check-closure_linter" if="closure_linter-not-installed" description="Downloads and installs Closure Linter">
        <property name="closure-tar" value="closure_linter-latest.tar.gz"/>
        <delete dir="tools/closure_linter"/>
		<delete file="tools/${closure-tar}"/>
        <echo message="Downloading Closure Linter ..."/>
        <exec executable="wget" dir="tools">
	        <arg line="-c http://closure-linter.googlecode.com/files/${closure-tar}"/>
        </exec>
        <echo message="Extracting Closure Linter ..."/>
        <exec executable="tar" dir="tools">
		    <arg line="-zxvf ${closure-tar}"/>
        </exec>
        <echo message="Running PhantomJS (rename-closure-linter.js) ..."/>
        <exec executable="tools/phantomjs">
	    		<arg line="rename-closure-linter.js"/>
	  	</exec>
        <exec executable="cp">
            <arg line="tools/closure_linter/closure_linter/gjslint.py tools/closure_linter/gjslint.py"/>
        </exec>
        <exec executable="cp">
            <arg line="tools/closure_linter/closure_linter/fixjsstyle.py tools/closure_linter/fixjsstyle.py"/>
        </exec>
    </target>

    <target name="check-jslint">
        <condition property="jslint-not-downloaded">
            <not>
              <available file="tools/jslint.js"/>
            </not>
          </condition>
    </target>
    <target name="tools/jslint" depends="check-jslint" if="jslint-not-downloaded" description="Downloads jslint.js into the tools folder">
        <exec executable="wget" dir="tools">
	        <arg line="-c https://raw.github.com/douglascrockford/JSLint/master/jslint.js"/>
        </exec>
    </target>
    <target name="check-jsbeautifier">
        <condition property="jsbeautifier-not-downloaded">
            <not>
              <available file="tools/beautify.js"/>
            </not>
          </condition>
    </target>
    <target name="tools/jsbeautifier" depends="check-jsbeautifier" if="jsbeautifier-not-downloaded" description="Downloads beautify.js into the tools folder">
        <exec executable="wget" dir="tools">
	        <arg line="-c https://raw.github.com/einars/js-beautify/master/beautify.js"/>
        </exec>
    </target>

    <!-- Note: node-dir and node-version properties defined on top of file -->
    <target name="check-node">
        <condition property="node-not-downloaded">
            <not>
              <available file="tools/${node-dir}/bin/node"/>
            </not>
          </condition>
    </target>
    <target name="tools/node" depends="check-node" if="node-not-downloaded" description="Downloads NodeJS into the tools folder">
        <delete file="tools/node"/>
        <delete file="tools/npm"/>
        <exec executable="wget" dir="tools">
	        <arg line="-c http://nodejs.org/dist/v${node-version}/${node-dir}.tar.gz"/>
        </exec>
        <exec executable="tar" dir="tools">
		    <arg line="-zxvf ${node-dir}.tar.gz"/>
        </exec>
	<symlink link="tools/node" resource="${node-dir}/bin/node"/>
	<symlink link="tools/npm" resource="${node-dir}/bin/npm"/>
    </target>
    <target name="check-redis">
        <condition property="redis-not-downloaded">
            <not>
              <available file="tools/${redis-dir}/src/redis-server"/>
            </not>
          </condition>
    </target>
    <target name="tools/redis" depends="check-redis" if="redis-not-downloaded" description="Downloads redis into the tools folder">
        <exec executable="wget" dir="tools">
	        <arg line="-c http://redis.googlecode.com/files/${redis-dir}.tar.gz"/>
        </exec>
        <exec executable="tar" dir="tools">
		    <arg line="-zxvf ${redis-dir}.tar.gz"/>
        </exec>
        <exec executable="make" dir="tools/${redis-dir}">
        </exec>
	<symlink link="tools/redis" resource="${redis-dir}/src/redis-server"/>
    </target>
    <target name="check-browserify">
        <condition property="browserify-not-downloaded">
            <not>
                <available file="tools/node_modules/browserify/bin/cmd.js"/>
            </not>
        </condition>
    </target>
    <target name="tools/browserify" depends="check-browserify,tools/node" if="browserify-not-downloaded" description="Installs browserify">
        <echo message="Installing browserify (this might take a while) ..."/>
        <exec executable="./npm" dir="tools">
            <arg line="install browserify"/>
        </exec>
    </target>
</project>
